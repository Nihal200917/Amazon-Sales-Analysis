---
title: "Visual Analysis"
execute: 
  echo: false
---
## Fitted Model
```{r}
#| message: false
#| label: setup
#| warning: false

library(tidybayes)
library(tidyverse)
library(brms)
library(plotly)
library(gtsummary)
```

```{r}
#| label: raw_data
#| warning: false
#| message: false
raw_df <- read_csv("data/AmazonSalesData.csv", show_col_types = FALSE)
```

```{r}
#| label: cleaning
#| message: false
#| warning: false
AmazonSales <- raw_df |>
  rename(`Manufacturing Cost` = `Unit Cost`,
         Total_Profit = `Total Profit`,
         Sales_Channel = `Sales Channel`) |>
  select(Sales_Channel, `Manufacturing Cost`, Total_Profit, `Order Priority`, `Order Date`) |> 
  mutate(`Order Priority` = recode(`Order Priority`,
                                   "H" = "High Priority",
                                   "C" = "Critical Priority",
                                   "L" = "Low Priority",
                                   "M" = "Medium Priority")) |>
  mutate(Order_Year = year(mdy(`Order Date`)))
```

```{r}
#| cache: true
#| message: false
#| label: brm_model
#| warning: false
fit_x2 <- brm(formula = Total_Profit ~ Order_Year,
              data = AmazonSales,
              family = gaussian(),
              silent = 2,
              refresh = 0,
              seed = 17)
```

```{r}
#| label: variable
#| message: false
#| warning: false
ndata = tibble("Order_Year" = c(2010:2026))
```

```{r}
#| label: model
#| message: false
#| warning: false
plot4 <- fit_x2 |>
  add_epred_draws(newdata = ndata) |>
  ggplot(aes(x = Order_Year, y = .epred)) +
  geom_point(color = "blue", size = 3, alpha = 0.6) +  # Change point color and size
  geom_smooth(method = "loess", color = "red", se = FALSE, size = 1) +  # Smooth line customization
  labs(
    title = "Predicted Total Profit by Order Year",
    x = "Order Year",
    y = "Predicted Total Profit",
    caption = "Model: Bayesian Regression with Gaussian Family"
  ) +
  theme_minimal(base_size = 15) +  # Minimal theme with larger base font size
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold"),  # Center and bold title
    plot.caption = element_text(size = 10, face = "italic"),  # Style caption
    axis.text = element_text(color = "black")  # Ensure axis text is clear
  )
interactive_plot <- ggplotly(plot4, tooltip = c("x", "y"))

# Display the interactive plot
interactive_plot
```

## Graph Explanation
The plot visualizes the predictions from a Bayesian regression model where total profit is modeled as a function of order year using a Gaussian distribution. The blue points represent the model's predicted profits for each year from 2010 to 2026, while the red LOESS curve smooths these predictions to reveal the overall trend. The plot, with its clear axis labels, centered title, and styled caption, suggests how the model expects total profit to evolve over time, providing valuable insights into potential profit trends and helping guide future business decisions.
\n
\n
The inclusion of a LOESS curve in the plot adds a nuanced layer of analysis by highlighting potential non-linear patterns that a simple linear regression might overlook. This is particularly important in financial forecasting, where trends can fluctuate due to various external factors. The Bayesian framework further strengthens the model by incorporating prior information and providing a probabilistic interpretation of the predictions, which can help in assessing uncertainty and making more informed decisions. Together, these elements make the plot a powerful tool for visualizing and understanding the complex dynamics of profit trends over time, offering both immediate insights and a foundation for deeper analysis.


## Quantitative Analysis

```{r}
#| warning: false
# creates the regression table summarizing 
fit_x2 |>
  tbl_regression()
```

### Formula
$$
SalesChannel_i = \beta_0 + \beta_1TotalProfit + \epsilon_i
$$

## Explanation of regression table
The output from your Bayesian regression model indicates that the predictor Order_Year has an estimated effect of increasing the outcome variable, likely total profit, by 971 units for each additional year. However, the 95% Credible Interval for this effect is wide, ranging from -40,693 to 43,245, suggesting significant uncertainty. This implies that the true effect of Order_Year could be either negative, positive, or close to zero, indicating that Order_Year might not be a strong or reliable predictor in your model.
